# -*- coding: utf-8 -*-
"""N_CALC.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p_zcyPSFKa6e0oJGD-LjH8GTnYBAWyTK
"""

import numpy as np
import matplotlib.pyplot as plt

def simulate_random_results(target_winrate, num_simulations=1000):
    target_winrate /=
    results = []

    # Simular resultados aleatórios (1 = vitória, 0 = derrota)
    for _ in range(num_simulations):
        result = 1 if np.random.rand() < target_winrate else 0
        results.append(result)

    # Calcular o Winrate acumulado
    winrate_accumulated = np.cumsum(results) / np.arange(1, num_simulations + 1)

    # Plotar os resultados
    plt.figure(figsize=(10, 6))
    plt.plot(range(1, num_simulations + 1), winrate_accumulated, label="Winrate Acumulado")
    plt.axhline(y=target_winrate, color='r', linestyle='--', label="Winrate Desejado")
    plt.xlabel("Número de Simulações")
    plt.ylabel("Winrate Acumulado")
    plt.title("Simulação de Winrate Acumulado")
    plt.legend()
    plt.grid()
    plt.show()

# Exemplo de uso
simulate_random_results(target_winrate=45, num_simulations=300)